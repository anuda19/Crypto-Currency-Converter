{"ast":null,"code":"import _slicedToArray from \"C:/Users/DELL/Desktop/React/API/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React\\\\API\\\\src\\\\Crypto\\\\CurrencyConverter.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Exchange from \"./Exchange\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CurrencyConverter = function CurrencyConverter() {\n  _s();\n\n  var currencies = [\"BTC\", \"ETH\", \"USD\", \"XRP\", \"LTC\", \"ADA\"];\n\n  var _useState = useState(\"BTC\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      primaryCurr = _useState2[0],\n      setPrimaryCurr = _useState2[1];\n\n  var _useState3 = useState(\"BTC\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      secondaryCurr = _useState4[0],\n      setSecondaryCurr = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      amount = _useState6[0],\n      setAmount = _useState6[1];\n\n  var Convert = function Convert() {\n    var options = {\n      method: 'GET',\n      url: 'https://alpha-vantage.p.rapidapi.com/query',\n      params: {\n        from_currency: primaryCurr,\n        function: 'CURRENCY_EXCHANGE_RATE',\n        to_currency: secondaryCurr\n      },\n      headers: {\n        'X-RapidAPI-Host': 'alpha-vantage.p.rapidapi.com',\n        'X-RapidAPI-Key': '237425401amsha7ec5fa9e099898p150074jsn4d95a7fcf4b2'\n      }\n    };\n    axios.request(options).then(function (response) {\n      console.log(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currency\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CurrencyConverter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Primary Currency: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: amount,\n              onChange: function onChange(e) {\n                return setAmount(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: primaryCurr,\n              name: \"currency-option\",\n              className: \"option\",\n              onChange: function onChange(e) {\n                return setPrimaryCurr(e.target.value);\n              },\n              children: currencies.map(function (currency, i) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: currency\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Secondary Currency: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: secondaryCurr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: \"\",\n              name: \"currency-option\",\n              className: \"option\",\n              onChange: function onChange(e) {\n                return setSecondaryCurr(e.target.value);\n              },\n              children: currencies.map(function (currency, i) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: currency\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Convert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Exchange, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CurrencyConverter, \"IcHcxEUN5n5ylkKAgkgQGblO5WU=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React/API/src/Crypto/CurrencyConverter.js"],"names":["React","Exchange","useState","axios","CurrencyConverter","currencies","primaryCurr","setPrimaryCurr","secondaryCurr","setSecondaryCurr","amount","setAmount","Convert","options","method","url","params","from_currency","function","to_currency","headers","request","then","response","console","log","data","catch","error","e","target","value","map","currency","i"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Exchange from \"./Exchange\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../index.css\";\r\n\r\nconst CurrencyConverter = () => {\r\n  const currencies = [\"BTC\", \"ETH\", \"USD\", \"XRP\", \"LTC\", \"ADA\"];\r\n  const [primaryCurr, setPrimaryCurr] = useState(\"BTC\");\r\n  const [secondaryCurr, setSecondaryCurr] = useState(\"BTC\");\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  const Convert = () => {\r\n\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://alpha-vantage.p.rapidapi.com/query',\r\n        params: {from_currency: primaryCurr, function: 'CURRENCY_EXCHANGE_RATE', to_currency: secondaryCurr},\r\n        headers: {\r\n          'X-RapidAPI-Host': 'alpha-vantage.p.rapidapi.com',\r\n          'X-RapidAPI-Key': '237425401amsha7ec5fa9e099898p150074jsn4d95a7fcf4b2'\r\n        }\r\n      };\r\n      \r\n      axios.request(options).then((response)=> {\r\n          console.log(response.data);\r\n      }).catch((error) =>{\r\n          console.error(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"currency\">\r\n      <h2>CurrencyConverter</h2>\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Primary Currency: </td>\r\n            <td>\r\n              <input type=\"number\" value={amount}\r\n                onChange={(e)=>setAmount(e.target.value)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                value={primaryCurr}\r\n                name=\"currency-option\"\r\n                className=\"option\"\r\n                onChange={(e) => setPrimaryCurr(e.target.value)}\r\n              >\r\n                {currencies.map((currency, i) => (\r\n                  <option key={i}>{currency}</option>\r\n                ))}\r\n              </select>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Secondary Currency: </td>\r\n            <td>\r\n              <input type=\"number\" value={secondaryCurr} />\r\n            </td>\r\n            <td>\r\n              <select\r\n                value={\"\"}\r\n                name=\"currency-option\"\r\n                className=\"option\"\r\n                onChange={(e) => setSecondaryCurr(e.target.value)}\r\n              >\r\n                {currencies.map((currency, i) => (\r\n                  <option key={i}>{currency}</option>\r\n                ))}\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button onClick={Convert}>Convert</button>\r\n      <Exchange />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyConverter;\r\n"]},"metadata":{},"sourceType":"module"}